#include<iostream>
using namespace std;
void Merge(int arr[],int left,int mid,int right)
{
    int n1=mid-left+1;  //for indexing start from 0
    int n2=right-mid;
    int temp1[n1],temp2[n2];
    for(int i=0; i<n1; i++)
    {
        temp1[i]=arr[left+i];
    }
    for(int i=0; i<n2; i++)
    {
        temp2[i]=arr[mid+1+i];
    }
    int i=0,j=0,k=left;
    while(i<n1 && j<n2)
    {
        if(temp1[i]<temp2[j])
        {
            arr[k]=temp1[i];
            i++;
            k++;
        }
        else
        {
            arr[k]=temp2[j];
            j++;
            k++;
        }
    }
    while(i<n1)
    {
        arr[k]=temp1[i];
        i++;
        k++;
    }
    while(j<n2)
    {
        arr[k]=temp2[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[],int left,int right)
{

    if(left<right)
    {
        int m=left+(right-left)/2;
        mergeSort(arr,left,m);
        mergeSort(arr,m+1,right);
        Merge(arr,left,m,right);
    }
}

int main()
{
    int arr[]= {74,53,24,13,84,32,7,10,17,116,98};
    int n= sizeof(arr)/sizeof(arr[0]);
    mergeSort(arr,0,n-1);
    for( int x: arr)
    {
        cout<<x<<" ";
    }
    return 0;
}
